/* This model is part of the RAPID-ML e-learning program.<br/>
    Copyright (c) 2017-2019 ModelSolv Inc. All rights reserved. */
rapidModel Audio

	/** ### Purpose 

	We'll apply what we've learned to create some specialized
	types for measurements and related properties.  
    
    ### Instructions
    
    Modify the data model as follows:
  	* Notice that `gain`, `volume`, `bass`, `mid`, and 
  	  `treble` all have the same integer data type with the
  	  same valueRange constraint. Extract the value range to
  	  an `AudioLevel` simple data type, and change those five
      properties to use the new simple type. 
  	* `effectType` must be one of several predefined string 
  	  values. Create a new `AudioFX` enumeration with the 
  	  allowed values 'None', 'Hall Reverb', 'Plate Reverb', 
  	  and 'Delay'. Change `effectType` to use this enum.
  	* Change the `label` property to use a new data type
  	  that has a maximum length of 10 characters.
  	* Change `compressorThreshold` to use a new data type
  	  that must be greater than zero, and less than or equal
  	  to 10.
  	* Change `groupAssignment` to use a new data type with
  	  a pattern constraint. The regular expression restricts
  	  the value to a single upper-case letter in the standard
  	  alphabet.<br/><br/>
  	  **HINT:** Use a regular expression sandbox like 
  	  https://www.regextester.com to specify and test
  	  the regular expression. Also, see the comments about 
  	  RAPID&#8209;ML's regular expression syntax at
	  [http://RZen.io/RegEx](http://RZen.io/RegEx).
	
	----
	
	### Answer: */
	dataModel AudioSettings

		simpleType AudioLevel defined as integer
			with valueRange from -10 to 10
			
		enum string AudioFX
			'None'
			'Hall Reverb'
			'Plate Reverb'
			'Delay'
			
		simpleType ChannelLabel defined as string
			of length up to 10
			
		simpleType Threshold defined as decimal
			with valueRange from 0 exclusive up to 10 inclusive
			
		simpleType ChannelGroup as string
			/* Note the raw string syntax: the letter 'r'
			   followed by a quoted string. Also, note that
			   the regex does not have ^ (start of string)
			   and $ (end of string) anchors. These anchors
			   are implicit in RAPID-ML regular expressions.
			*/
			matching regex r"[A-Z]"

		structure AudioChannelSettings
			gain : AudioLevel
			volume : AudioLevel
			bass : AudioLevel
			mid : AudioLevel
			treble : AudioLevel
			effectType: AudioFX
			label: ChannelLabel
			compressorThreshold: Threshold
			groupAssignment: ChannelGroup
			attenuator: integer
