/* This model is part of the RAPID-ML e-learning program.<br/>
    Copyright (c) 2017-2019 ModelSolv Inc. All rights reserved. */
rapidModel Audio

	/** ### Purpose 

	We'll apply what we've learned to create some specialized
	types for measurements and related properties.  
    
    ### Instructions
    
    Modify the data model as follows:
  	* Notice that `gain`, `volume`, `bass`, `mid`, and 
  	  `treble` all have the same integer data type with the
  	  same valueRange constraint. Extract the value range to
  	  an `AudioLevel` simple data type, and change those five
      properties to use the new simple type. 
  	* `effectType` must be one of several predefined string 
  	  values. Create a new `AudioFX` enumeration with the 
  	  allowed values 'None', 'Hall Reverb', 'Plate Reverb', 
  	  and 'Delay'. Change `effectType` to use this enum.
  	* Change the `label` property to use a new data type
  	  that has a maximum length of 10 characters.
  	* Change `compressorThreshold` to use a new data type
  	  that must be greater than zero, and less than or equal
  	  to 10.
  	* Change `groupAssignment` to use a new data type with
  	  a pattern constraint. The regular expression restricts
  	  the value to a single upper-case letter in the standard
  	  alphabet.<br/><br/>
  	  **HINT:** Use a regular expression sandbox like 
  	  https://www.regextester.com to specify and test
  	  the regular expression.
	*/
	dataModel AudioSettings

		structure AudioChannelSettings
			gain : integer
				with valueRange from -10 to 10
			volume : integer	
				with valueRange from -10 to 10
			bass : integer	
				with valueRange from -10 to 10
			mid : integer	
				with valueRange from -10 to 10
			treble : integer	
				with valueRange from -10 to 10
			effectType: string
			label: string
			compressorThreshold: decimal
			groupAssignment: string
			attenuator: integer
